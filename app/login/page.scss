// Breakpoint/modo mobile (ajuste como quiser)

@use "sass:math";

@mixin sp-layout {
  @media (max-width: 768px), (pointer: coarse) and (hover: none) {
    @content;
  }
}

section {
  overflow: hidden;
}

@function random-range($min, $max) {
  $r: math.random(); // 0..1 (unitless)
  @return $min + ($r * ($max - $min));
}

// valor discreto (arredondado)
@function random-range-int($min, $max) {
  $r: math.random();
  @return math.round($min + ($r * ($max - $min)));
}

#stars {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 120%;
  transform: rotate(-25deg);
}

#star {
  $star-count: 10;
  --star-color: white;
--star-tail-length: #{math.div(random-range(500em, 750em), 100)};
  --star-tail-height: 3px;
  --star-width: calc(var(--star-tail-length) / );
  --fall-duration: 20s;
  --tail-fade-duration: var(--fall-duration);

  position: absolute;
  top: var(--top-offset);
  left: 0;
  width: var(--star-tail-length);
  height: var(--star-tail-height);
  color: var(--star-color);
  background: linear-gradient(15deg, currentColor, transparent);
  border-radius: 50%;
  filter: drop-shadow(0 0 7px currentColor);
  transform: translate3d(104em, 0, 0);
  animation: fall var(--fall-duration) var(--fall-delay) linear infinite, tail-fade var(--tail-fade-duration) var(--fall-delay) ease-out infinite;
  
  @include sp-layout {
    // For mobile performance, tail-fade animation will be removed QAQ
    animation: fall var(--fall-duration) var(--fall-delay) linear infinite;
  }

  @for $i from 1 through $star-count {
    &:nth-child(#{$i}) {
      --star-tail-length: #{random_range(500em, 750em) * 0.01};
      --top-offset: #{random_range(0vh, 10000vh) * 0.01};
      --fall-duration: #{random_range(6000, 12000s) * 0.001};
      --fall-delay: #{math.div(random_range(0, 10000s), 1000)};
    }
  }

  &::before, &::after {
    position: absolute;
    content: '';
    top: 0;
    left: calc(var(--star-width) / -2);
    width: var(--star-width);
    height: 100%;
    background: linear-gradient(45deg, transparent, currentColor, transparent);
    border-radius: inherit;
    animation: blink 2s linear infinite;
  }

  &::before {
    transform: rotate(45deg);
  }

  &::after {
    transform: rotate(-45deg);
  }
}

@keyframes fall {
  to {
    transform: translate3d(-60em, 0, 0);
  }
}

@keyframes tail-fade {
  0%, 50% {
    width: var(--star-tail-length);
    opacity: 1;
  }

  70%, 80% {
    width: 0;
    opacity: 0.4;
  }

  100% {
    width: 0;
    opacity: 0;
  }
}

@keyframes blink {
  50% {
    opacity: 0.6;
  }
}